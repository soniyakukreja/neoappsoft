{"ast":null,"code":"import axios from \"axios\";\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n\nfunction login(action) {\n  return axios({\n    method: \"post\",\n    url: \"https://apibyashu.herokuapp.com/api/login\",\n    data: action.payload\n  });\n}\n\nfunction* LoginGenerator(action) {\n  //To get state values here\n\n  /*var state = yield select(function(state){\r\n      return state\r\n  })*/\n  var result = yield call(login, action); // based on result of task\n  // we will dispatch differenet type of requests\n\n  if (result.data.token) {\n    yield put({\n      type: 'LOGIN_SUCCESS',\n      payload: result.data\n    });\n  } else {\n    yield put({\n      type: 'LOGIN_FAILURE'\n    });\n  }\n}\n\n_c = LoginGenerator;\nexport function* LoginSaga() {\n  yield takeEvery('LOGIN', LoginGenerator);\n}\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}*/\n\n_c2 = LoginSaga;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginGenerator\");\n$RefreshReg$(_c2, \"LoginSaga\");","map":{"version":3,"sources":["/home/neosoft/Desktop/neoappsoft/src/reduxstore/sagas.js"],"names":["axios","call","put","select","takeEvery","login","action","method","url","data","payload","LoginGenerator","result","token","type","LoginSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,oBAA7C;;AAEA,SAASC,KAAT,CAAeC,MAAf,EAAsB;AAClB,SAAON,KAAK,CAAC;AACTO,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,2CAFI;AAGTC,IAAAA,IAAI,EAAEH,MAAM,CAACI;AAHJ,GAAD,CAAZ;AAMH;;AAED,UAAUC,cAAV,CAAyBL,MAAzB,EAAgC;AAC5B;;AACA;AACJ;AACA;AAEI,MAAIM,MAAM,GAAG,MAAMX,IAAI,CAACI,KAAD,EAAQC,MAAR,CAAvB,CAN4B,CAO5B;AACA;;AACA,MAAGM,MAAM,CAACH,IAAP,CAAYI,KAAf,EAAqB;AACjB,UAAMX,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAC,eAAN;AAAuBJ,MAAAA,OAAO,EAACE,MAAM,CAACH;AAAtC,KAAD,CAAT;AACH,GAFD,MAEM;AACF,UAAMP,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAT;AACH;AAEJ;;KAfSH,c;AAiBV,OAAO,UAAUI,SAAV,GAAqB;AACxB,QAAMX,SAAS,CAAC,OAAD,EAAUO,cAAV,CAAf;AACH;AAED;AACA;AACA;AACA;;MAPiBI,S","sourcesContent":["import axios from \"axios\"\r\nimport { call, put, select, takeEvery } from 'redux-saga/effects'\r\n\r\nfunction login(action){\r\n    return axios({\r\n        method: \"post\",\r\n        url :\"https://apibyashu.herokuapp.com/api/login\",\r\n        data: action.payload\r\n    })\r\n\r\n}\r\n\r\nfunction* LoginGenerator(action){\r\n    //To get state values here\r\n    /*var state = yield select(function(state){\r\n        return state\r\n    })*/\r\n\r\n    var result = yield call(login, action)\r\n    // based on result of task\r\n    // we will dispatch differenet type of requests\r\n    if(result.data.token){\r\n        yield put({type:'LOGIN_SUCCESS', payload:result.data})\r\n    } else{\r\n        yield put({type:'LOGIN_FAILURE'})\r\n    }\r\n\r\n}\r\n\r\nexport function* LoginSaga(){\r\n    yield takeEvery('LOGIN', LoginGenerator)\r\n}\r\n\r\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}*/"]},"metadata":{},"sourceType":"module"}