{"ast":null,"code":"import axios from \"axios\";\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n\nfunction login(action) {\n  console.log('login axios');\n  return axios({\n    method: \"post\",\n    url: \"https://apibyashu.herokuapp.com/api/login\",\n    data: action.payload\n  });\n}\n\nfunction* LoginGenerator(action) {\n  console.log('login generator'); //To get state values here\n\n  /*var state = yield select(function(state){\r\n      return state\r\n  })*/\n\n  var result = yield call(login, action); // based on result of task\n  // we will dispatch differenet type of requests\n\n  console.log('login generator  ', result);\n\n  if (result.data.token) {\n    yield put({\n      type: 'LOGIN_SUCCESS',\n      payload: result.data\n    });\n    localStorage.token = response.data.token;\n    props.history.push(\"/\");\n    console.log('LOGIN_SUCCESS put', result);\n  } else {\n    yield put({\n      type: 'LOGIN_FAILURE'\n    });\n    console.log('LOGIN_FAILURE put');\n  }\n}\n\n_c = LoginGenerator;\nexport function* LoginSaga() {\n  console.log('login saga');\n  yield takeEvery('LOGIN', LoginGenerator);\n}\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}*/\n\n_c2 = LoginSaga;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginGenerator\");\n$RefreshReg$(_c2, \"LoginSaga\");","map":{"version":3,"sources":["/home/neosoft/Desktop/neoappsoft/src/reduxstore/sagas.js"],"names":["axios","call","put","select","takeEvery","login","action","console","log","method","url","data","payload","LoginGenerator","result","token","type","localStorage","response","props","history","push","LoginSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,oBAA7C;;AAEA,SAASC,KAAT,CAAeC,MAAf,EAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,SAAOR,KAAK,CAAC;AACTS,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,2CAFI;AAGTC,IAAAA,IAAI,EAAEL,MAAM,CAACM;AAHJ,GAAD,CAAZ;AAMH;;AAED,UAAUC,cAAV,CAAyBP,MAAzB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAD4B,CAG5B;;AACA;AACJ;AACA;;AAEI,MAAIM,MAAM,GAAG,MAAMb,IAAI,CAACI,KAAD,EAAQC,MAAR,CAAvB,CAR4B,CAS5B;AACA;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCM,MAAhC;;AAEA,MAAGA,MAAM,CAACH,IAAP,CAAYI,KAAf,EAAqB;AACjB,UAAMb,GAAG,CAAC;AAACc,MAAAA,IAAI,EAAC,eAAN;AAAuBJ,MAAAA,OAAO,EAACE,MAAM,CAACH;AAAtC,KAAD,CAAT;AAEAM,IAAAA,YAAY,CAACF,KAAb,GAAqBG,QAAQ,CAACP,IAAT,CAAcI,KAAnC;AACAI,IAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAEAd,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCM,MAAhC;AACH,GAPD,MAOM;AACF,UAAMZ,GAAG,CAAC;AAACc,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAT;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH;AAEJ;;KA5BSK,c;AA8BV,OAAO,UAAUS,SAAV,GAAqB;AACxBf,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAMJ,SAAS,CAAC,OAAD,EAAUS,cAAV,CAAf;AACH;AAED;AACA;AACA;AACA;;MARiBS,S","sourcesContent":["import axios from \"axios\"\r\nimport { call, put, select, takeEvery } from 'redux-saga/effects'\r\n\r\nfunction login(action){\r\n    console.log('login axios')\r\n\r\n    return axios({\r\n        method: \"post\",\r\n        url :\"https://apibyashu.herokuapp.com/api/login\",\r\n        data: action.payload\r\n    })\r\n\r\n}\r\n\r\nfunction* LoginGenerator(action){\r\n    console.log('login generator')\r\n\r\n    //To get state values here\r\n    /*var state = yield select(function(state){\r\n        return state\r\n    })*/\r\n\r\n    var result = yield call(login, action)\r\n    // based on result of task\r\n    // we will dispatch differenet type of requests\r\n\r\n\r\n    console.log('login generator  ',result)\r\n\r\n    if(result.data.token){\r\n        yield put({type:'LOGIN_SUCCESS', payload:result.data})\r\n       \r\n        localStorage.token = response.data.token\r\n        props.history.push(\"/\")\r\n\r\n        console.log('LOGIN_SUCCESS put',result)\r\n    } else{\r\n        yield put({type:'LOGIN_FAILURE'})\r\n        console.log('LOGIN_FAILURE put')\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function* LoginSaga(){\r\n    console.log('login saga')\r\n    yield takeEvery('LOGIN', LoginGenerator)\r\n}\r\n\r\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}*/"]},"metadata":{},"sourceType":"module"}