{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport demo from \"./reducers\"; //import {logger} from \"./Middleware\"\n\nimport createSaga from \"redux-saga\"; //import {LoginSaga,RootSaga} from \"./sagas\"\n\nimport { LoginSaga } from \"./sagas\";\nvar sagaMiddleware = createSaga(); //var middlewares = applyMiddleware(logger, sagaMiddleware)\n\nvar middlewares = applyMiddleware(sagaMiddleware);\nexport default createStore(demo, middlewares);\nsagaMiddleware.run(LoginSaga);\nsagaMiddleware.run(AllCakesSaga); //sagaMiddleware.run(RootSaga)\n//========to use pply middleware========\n\n/*var middlewares = applyMiddleware(FirstMiddleWare)\n var store = createStore(demo,middlewares)\n */\n//========to use pply middleware========\n//========without middleware and sata========\n\n/*\nvar store = createStore(demo)\nexport default store\n*/","map":{"version":3,"sources":["/home/neosoft/Desktop/neoappsoft/src/reduxstore/store.js"],"names":["createStore","applyMiddleware","demo","createSaga","LoginSaga","sagaMiddleware","middlewares","run","AllCakesSaga"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,SAAQC,SAAR,QAAwB,SAAxB;AAEA,IAAIC,cAAc,GAAGF,UAAU,EAA/B,C,CACA;;AAEA,IAAIG,WAAW,GAAGL,eAAe,CAACI,cAAD,CAAjC;AAEA,eAAeL,WAAW,CAACE,IAAD,EAAMI,WAAN,CAA1B;AACAD,cAAc,CAACE,GAAf,CAAmBH,SAAnB;AAEAC,cAAc,CAACE,GAAf,CAAmBC,YAAnB,E,CAEA;AAEA;;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA","sourcesContent":["import {createStore,applyMiddleware} from \"redux\"\nimport demo from \"./reducers\"\n//import {logger} from \"./Middleware\"\nimport createSaga from \"redux-saga\"\n//import {LoginSaga,RootSaga} from \"./sagas\"\nimport {LoginSaga} from \"./sagas\"\n\nvar sagaMiddleware = createSaga()\n//var middlewares = applyMiddleware(logger, sagaMiddleware)\n\nvar middlewares = applyMiddleware(sagaMiddleware)\n\nexport default createStore(demo,middlewares)\nsagaMiddleware.run(LoginSaga)\n\nsagaMiddleware.run(AllCakesSaga)\n\n//sagaMiddleware.run(RootSaga)\n\n//========to use pply middleware========\n/*var middlewares = applyMiddleware(FirstMiddleWare)\n var store = createStore(demo,middlewares)\n */\n//========to use pply middleware========\n\n//========without middleware and sata========\n/*\nvar store = createStore(demo)\nexport default store\n*/"]},"metadata":{},"sourceType":"module"}