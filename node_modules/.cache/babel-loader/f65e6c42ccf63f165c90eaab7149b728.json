{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, put, select, takeEvery } from 'redux-saga/effects'; //=============LOGIN====================\n\nfunction login(action) {\n  return axios({\n    method: \"post\",\n    url: \"https://apibyashu.herokuapp.com/api/login\",\n    data: action.payload\n  });\n}\n\nfunction GET_CART_DATA() {\n  console.log('getcartdata insite localstorage', localStorage); // axios({\n  //     url:\"https://apibyashu.herokuapp.com/api/cakecart\",\n  //     method:\"post\",\n  //     data: {},\n  //     headers : {\n  //         authtoken: localStorage.token\n  //     }\n  // })\n}\n\n_c = GET_CART_DATA;\n\nfunction* LoginGenerator(action) {\n  var result = yield call(login, action); // based on result of task\n  // we will dispatch differenet type of requests\n\n  if (result.data.token) {\n    yield put({\n      type: 'LOGIN_SUCCESS',\n      payload: result.data\n    }); // yield call(GET_CART_DATA,action)\n\n    var statee = yield select(function (state) {\n      return state;\n    });\n\n    if (statee.isloggedin) {}\n  } else {\n    yield put({\n      type: 'LOGIN_FAILURE'\n    });\n    console.log('LOGIN_FAILURE put');\n  }\n}\n\n_c2 = LoginGenerator;\nexport function* LoginSaga() {\n  yield takeEvery('LOGIN', LoginGenerator);\n} //=============LOGIN END====================\n//=============GET HOME CAKES ====================\n\n_c3 = LoginSaga;\n\nfunction getCakes(action) {\n  return axios({\n    method: \"get\",\n    url: \"https://apibyashu.herokuapp.com/api/allcakes\"\n  });\n}\n\nexport function* AllCakesSaga() {\n  yield takeEvery('AllCakes', CakeGenerator);\n}\n_c4 = AllCakesSaga;\n\nfunction* CakeGenerator(action) {\n  var result = yield call(getCakes, action);\n\n  if (result.data.data.length > 0) {\n    yield put({\n      type: 'CAKES_RECEIVED',\n      payload: result.data\n    });\n  }\n} //=============END GET HOME CAKES  ====================\n//==============initialize user =======================\n\n\n_c5 = CakeGenerator;\nexport function* userInitSaga() {\n  yield takeEvery('USER_INIT', UserGenerator);\n}\nexport function* UserGenerator(action) {\n  var result = yield call(user_init, action);\n  console.log('user generator result', result);\n}\n_c6 = UserGenerator;\n\nfunction user_init(action) {\n  console.log('user_init in saga');\n  var token = localStorage.token;\n  return axios({\n    url: 'https://apibyashu.herokuapp.com/api/getuserdetails',\n    method: \"get\",\n    headers: {\n      authtoken: token\n    }\n  });\n} //==============initialize user =======================\n\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}\r\n\r\nexport function* RootSaga(){\r\n    yield all([LoginSaga(),OrderSaga()])\r\n}\r\n*/\n\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"GET_CART_DATA\");\n$RefreshReg$(_c2, \"LoginGenerator\");\n$RefreshReg$(_c3, \"LoginSaga\");\n$RefreshReg$(_c4, \"AllCakesSaga\");\n$RefreshReg$(_c5, \"CakeGenerator\");\n$RefreshReg$(_c6, \"UserGenerator\");","map":{"version":3,"sources":["/home/neosoft/Desktop/neoappsoft/src/reduxstore/sagas.js"],"names":["axios","all","call","put","select","takeEvery","login","action","method","url","data","payload","GET_CART_DATA","console","log","localStorage","LoginGenerator","result","token","type","statee","state","isloggedin","LoginSaga","getCakes","AllCakesSaga","CakeGenerator","length","userInitSaga","UserGenerator","user_init","headers","authtoken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,oBAAlD,C,CAEA;;AACA,SAASC,KAAT,CAAeC,MAAf,EAAuB;AACnB,SAAOP,KAAK,CAAC;AACTQ,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,2CAFI;AAGTC,IAAAA,IAAI,EAAEH,MAAM,CAACI;AAHJ,GAAD,CAAZ;AAKH;;AAED,SAASC,aAAT,GAAyB;AAErBC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CC,YAA/C,EAFqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;KAXQH,a;;AAaT,UAAUI,cAAV,CAAyBT,MAAzB,EAAiC;AAC7B,MAAIU,MAAM,GAAG,MAAMf,IAAI,CAACI,KAAD,EAAQC,MAAR,CAAvB,CAD6B,CAE7B;AACA;;AACA,MAAIU,MAAM,CAACP,IAAP,CAAYQ,KAAhB,EAAuB;AACnB,UAAMf,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAE,eAAR;AAAyBR,MAAAA,OAAO,EAAEM,MAAM,CAACP;AAAzC,KAAD,CAAT,CADmB,CAEnB;;AAEA,QAAIU,MAAM,GAAG,MAAMhB,MAAM,CAAC,UAAUiB,KAAV,EAAiB;AACvC,aAAOA,KAAP;AACH,KAFwB,CAAzB;;AAGA,QAAID,MAAM,CAACE,UAAX,EAAuB,CAEtB;AACJ,GAVD,MAUO;AACH,UAAMnB,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ;;MAlBSE,c;AAoBV,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAMlB,SAAS,CAAC,OAAD,EAAUW,cAAV,CAAf;AACH,C,CACD;AAGA;;MANiBO,S;;AAQjB,SAASC,QAAT,CAAkBjB,MAAlB,EAA0B;AACtB,SAAOP,KAAK,CAAC;AACTQ,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,GAAG,EAAE;AAFI,GAAD,CAAZ;AAIH;;AAED,OAAO,UAAUgB,YAAV,GAAyB;AAC5B,QAAMpB,SAAS,CAAC,UAAD,EAAaqB,aAAb,CAAf;AACH;MAFgBD,Y;;AAGjB,UAAUC,aAAV,CAAwBnB,MAAxB,EAAgC;AAC5B,MAAIU,MAAM,GAAG,MAAMf,IAAI,CAACsB,QAAD,EAAWjB,MAAX,CAAvB;;AAEA,MAAIU,MAAM,CAACP,IAAP,CAAYA,IAAZ,CAAiBiB,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,UAAMxB,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAE,gBAAR;AAA0BR,MAAAA,OAAO,EAAEM,MAAM,CAACP;AAA1C,KAAD,CAAT;AACH;AAEJ,C,CAED;AAEA;;;MAXUgB,a;AAaV,OAAO,UAAUE,YAAV,GAAwB;AAC3B,QAAMvB,SAAS,CAAC,WAAD,EAAawB,aAAb,CAAf;AACH;AAED,OAAO,UAAUA,aAAV,CAAwBtB,MAAxB,EAA+B;AAClC,MAAIU,MAAM,GAAG,MAAMf,IAAI,CAAC4B,SAAD,EAAWvB,MAAX,CAAvB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCG,MAApC;AACH;MAHgBY,a;;AAKjB,SAASC,SAAT,CAAmBvB,MAAnB,EAA0B;AACtBM,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,MAAII,KAAK,GAAGH,YAAY,CAACG,KAAzB;AACA,SAAOlB,KAAK,CAAC;AACbS,IAAAA,GAAG,EAAC,oDADS;AAEbD,IAAAA,MAAM,EAAC,KAFM;AAGbuB,IAAAA,OAAO,EAAG;AACNC,MAAAA,SAAS,EAAEd;AADL;AAHG,GAAD,CAAZ;AAOH,C,CACD;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\"\r\nimport { all, call, put, select, takeEvery } from 'redux-saga/effects'\r\n\r\n//=============LOGIN====================\r\nfunction login(action) {\r\n    return axios({\r\n        method: \"post\",\r\n        url: \"https://apibyashu.herokuapp.com/api/login\",\r\n        data: action.payload\r\n    })\r\n}\r\n\r\nfunction GET_CART_DATA() {\r\n\r\n    console.log('getcartdata insite localstorage', localStorage)\r\n    // axios({\r\n    //     url:\"https://apibyashu.herokuapp.com/api/cakecart\",\r\n    //     method:\"post\",\r\n    //     data: {},\r\n    //     headers : {\r\n    //         authtoken: localStorage.token\r\n    //     }\r\n    // })\r\n}\r\n\r\nfunction* LoginGenerator(action) {\r\n    var result = yield call(login, action)\r\n    // based on result of task\r\n    // we will dispatch differenet type of requests\r\n    if (result.data.token) {\r\n        yield put({ type: 'LOGIN_SUCCESS', payload: result.data })\r\n        // yield call(GET_CART_DATA,action)\r\n\r\n        var statee = yield select(function (state) {\r\n            return state\r\n        })\r\n        if (statee.isloggedin) {\r\n\r\n        }\r\n    } else {\r\n        yield put({ type: 'LOGIN_FAILURE' })\r\n        console.log('LOGIN_FAILURE put')\r\n    }\r\n}\r\n\r\nexport function* LoginSaga() {\r\n    yield takeEvery('LOGIN', LoginGenerator)\r\n}\r\n//=============LOGIN END====================\r\n\r\n\r\n//=============GET HOME CAKES ====================\r\n\r\nfunction getCakes(action) {\r\n    return axios({\r\n        method: \"get\",\r\n        url: \"https://apibyashu.herokuapp.com/api/allcakes\",\r\n    })\r\n}\r\n\r\nexport function* AllCakesSaga() {\r\n    yield takeEvery('AllCakes', CakeGenerator)\r\n}\r\nfunction* CakeGenerator(action) {\r\n    var result = yield call(getCakes, action)\r\n\r\n    if (result.data.data.length > 0) {\r\n        yield put({ type: 'CAKES_RECEIVED', payload: result.data })\r\n    }\r\n\r\n}\r\n\r\n//=============END GET HOME CAKES  ====================\r\n\r\n//==============initialize user =======================\r\n\r\nexport function* userInitSaga(){\r\n    yield takeEvery('USER_INIT',UserGenerator)\r\n}\r\n\r\nexport function* UserGenerator(action){\r\n    var result = yield call(user_init,action)\r\n    console.log('user generator result',result)\r\n}\r\n\r\nfunction user_init(action){\r\n    console.log('user_init in saga')\r\n    var token = localStorage.token \r\n    return axios({\r\n    url:'https://apibyashu.herokuapp.com/api/getuserdetails',\r\n    method:\"get\",\r\n    headers : {\r\n        authtoken: token\r\n    }\r\n    })\r\n}\r\n//==============initialize user =======================\r\n\r\n\r\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}\r\n\r\nexport function* RootSaga(){\r\n    yield all([LoginSaga(),OrderSaga()])\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}