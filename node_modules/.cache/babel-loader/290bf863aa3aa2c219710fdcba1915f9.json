{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, put, select, takeEvery } from 'redux-saga/effects';\n\nfunction login(action) {\n  console.log('login axios');\n  return axios({\n    method: \"post\",\n    url: \"https://apibyashu.herokuapp.com/api/login\",\n    data: action.payload\n  });\n}\n\nfunction* LoginGenerator(action) {\n  console.log('login generator'); //To get state values here\n\n  /*var state = yield select(function(state){\r\n      return state\r\n  })*/\n\n  var result = yield call(login, action); // based on result of task\n  // we will dispatch differenet type of requests\n\n  console.log('login generator  ', result);\n\n  if (result.data.token) {\n    yield put({\n      type: 'LOGIN_SUCCESS',\n      payload: result.data\n    });\n    var statee = yield select(function (state) {\n      console.log('phle state', state);\n      return state;\n    });\n    console.log('>>>>>>>>>>baadme state loggedin>>>>>>>>>>>>>', statee.isloggedin); //s console.log('LOGIN_SUCCESS put',result)\n  } else {\n    yield put({\n      type: 'LOGIN_FAILURE'\n    });\n    console.log('LOGIN_FAILURE put');\n  }\n}\n\n_c = LoginGenerator;\nexport function* LoginSaga() {\n  console.log('login saga');\n  yield takeEvery('LOGIN', LoginGenerator);\n}\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}\r\n\r\nexport function* RootSaga(){\r\n    yield all([LoginSaga(),OrderSaga()])\r\n}\r\n*/\n\n_c2 = LoginSaga;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginGenerator\");\n$RefreshReg$(_c2, \"LoginSaga\");","map":{"version":3,"sources":["/home/neosoft/Desktop/neoappsoft/src/reduxstore/sagas.js"],"names":["axios","all","call","put","select","takeEvery","login","action","console","log","method","url","data","payload","LoginGenerator","result","token","type","statee","state","isloggedin","LoginSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,oBAAlD;;AAEA,SAASC,KAAT,CAAeC,MAAf,EAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,SAAOT,KAAK,CAAC;AACTU,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,2CAFI;AAGTC,IAAAA,IAAI,EAAEL,MAAM,CAACM;AAHJ,GAAD,CAAZ;AAMH;;AAED,UAAUC,cAAV,CAAyBP,MAAzB,EAAgC;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAH4B,CAK5B;;AACA;AACJ;AACA;;AAEI,MAAIM,MAAM,GAAG,MAAMb,IAAI,CAACI,KAAD,EAAQC,MAAR,CAAvB,CAV4B,CAW5B;AACA;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCM,MAAhC;;AAEA,MAAGA,MAAM,CAACH,IAAP,CAAYI,KAAf,EAAqB;AACjB,UAAMb,GAAG,CAAC;AAACc,MAAAA,IAAI,EAAC,eAAN;AAAuBJ,MAAAA,OAAO,EAACE,MAAM,CAACH;AAAtC,KAAD,CAAT;AAEA,QAAIM,MAAM,GAAG,MAAMd,MAAM,CAAC,UAASe,KAAT,EAAe;AACrCX,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBU,KAAzB;AACA,aAAOA,KAAP;AACH,KAHwB,CAAzB;AAIAX,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA2DS,MAAM,CAACE,UAAlE,EAPiB,CASlB;AACF,GAVD,MAUM;AACF,UAAMjB,GAAG,CAAC;AAACc,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAT;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH;AAEJ;;KAjCSK,c;AAmCV,OAAO,UAAUO,SAAV,GAAqB;AACxBb,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAMJ,SAAS,CAAC,OAAD,EAAUS,cAAV,CAAf;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAbiBO,S","sourcesContent":["import axios from \"axios\"\r\nimport { all, call, put, select, takeEvery } from 'redux-saga/effects'\r\n\r\nfunction login(action){\r\n    console.log('login axios')\r\n\r\n    return axios({\r\n        method: \"post\",\r\n        url :\"https://apibyashu.herokuapp.com/api/login\",\r\n        data: action.payload\r\n    })\r\n\r\n}\r\n\r\nfunction* LoginGenerator(action){\r\n\r\n\r\n    console.log('login generator')\r\n\r\n    //To get state values here\r\n    /*var state = yield select(function(state){\r\n        return state\r\n    })*/\r\n\r\n    var result = yield call(login, action)\r\n    // based on result of task\r\n    // we will dispatch differenet type of requests\r\n\r\n\r\n    console.log('login generator  ',result)\r\n\r\n    if(result.data.token){\r\n        yield put({type:'LOGIN_SUCCESS', payload:result.data})\r\n\r\n        var statee = yield select(function(state){\r\n            console.log('phle state',state)\r\n            return state\r\n        })\r\n        console.log('>>>>>>>>>>baadme state loggedin>>>>>>>>>>>>>',statee.isloggedin)\r\n\r\n       //s console.log('LOGIN_SUCCESS put',result)\r\n    } else{\r\n        yield put({type:'LOGIN_FAILURE'})\r\n        console.log('LOGIN_FAILURE put')\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function* LoginSaga(){\r\n    console.log('login saga')\r\n    yield takeEvery('LOGIN', LoginGenerator)\r\n}\r\n\r\n/*export function* OrderSaga(){\r\n    yield takeEvery('ADD_ORDER', LoginGenerator)\r\n    yield takeEvery('FETCH_ORDER')\r\n}\r\n\r\nexport function* RootSaga(){\r\n    yield all([LoginSaga(),OrderSaga()])\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}