{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport demo from \"./reducers\"; //import {logger} from \"./Middleware\"\n\nimport createSaga from \"redux-saga\";\nimport { LoginSaga, AllCakesSaga, userInitSaga } from \"./sagas\";\nimport thunk from \"redux-thunk\";\nvar sagaMiddleware = createSaga();\nvar middleware = applyMiddleware(thunk, sagaMiddleware);\nlet store = createStore(demo, middleware);\nexport default createStore(demo, middlewares, thunkmiddleware);\nsagaMiddleware.run(LoginSaga);\nsagaMiddleware.run(AllCakesSaga);\nsagaMiddleware.run(userInitSaga); //========to use pply middleware========\n\n/*var middlewares = applyMiddleware(logger,FirstMiddleWare)\n var store = createStore(demo,middlewares)\n */\n//========to use pply middleware========\n//========without middleware and sata========\n\n/*\nvar store = createStore(demo)\nexport default store\n*/","map":{"version":3,"sources":["/home/neosoft/Desktop/neoappsoft/src/reduxstore/store.js"],"names":["createStore","applyMiddleware","demo","createSaga","LoginSaga","AllCakesSaga","userInitSaga","thunk","sagaMiddleware","middleware","store","middlewares","thunkmiddleware","run"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAoD,SAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAIC,cAAc,GAAGL,UAAU,EAA/B;AAEA,IAAIM,UAAU,GAAGR,eAAe,CAACM,KAAD,EAAQC,cAAR,CAAhC;AAEA,IAAIE,KAAK,GAAGV,WAAW,CAACE,IAAD,EAAOO,UAAP,CAAvB;AACA,eAAeT,WAAW,CAACE,IAAD,EAAMS,WAAN,EAAkBC,eAAlB,CAA1B;AACAJ,cAAc,CAACK,GAAf,CAAmBT,SAAnB;AAEAI,cAAc,CAACK,GAAf,CAAmBR,YAAnB;AACAG,cAAc,CAACK,GAAf,CAAmBP,YAAnB,E,CAGA;;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA","sourcesContent":["import {createStore,applyMiddleware} from \"redux\"\nimport demo from \"./reducers\"\n//import {logger} from \"./Middleware\"\nimport createSaga from \"redux-saga\"\nimport {LoginSaga, AllCakesSaga, userInitSaga} from \"./sagas\"\nimport thunk from \"redux-thunk\"\n\nvar sagaMiddleware = createSaga()\n\nvar middleware = applyMiddleware(thunk, sagaMiddleware);\n\nlet store = createStore(demo, middleware);\nexport default createStore(demo,middlewares,thunkmiddleware)\nsagaMiddleware.run(LoginSaga)\n\nsagaMiddleware.run(AllCakesSaga)\nsagaMiddleware.run(userInitSaga)\n\n\n//========to use pply middleware========\n/*var middlewares = applyMiddleware(logger,FirstMiddleWare)\n var store = createStore(demo,middlewares)\n */\n//========to use pply middleware========\n\n//========without middleware and sata========\n/*\nvar store = createStore(demo)\nexport default store\n*/"]},"metadata":{},"sourceType":"module"}